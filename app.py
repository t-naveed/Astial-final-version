import streamlit as st
import requests
from streamlit_option_menu import option_menu
import pandas as pd
import matplotlib.pyplot as plt
from streamlit_lottie import st_lottie
from multiapp import MultiApp
from apps import login,signup


st.set_page_config(page_title="Astia a Smishing Platform", page_icon=":fishing_pole_and_fish:", layout="wide")


# Use local CSS
def local_css(file_name):
    with open(file_name) as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)


local_css("style/style.css")


# -------- Lottie Asset -------- #
def load_lottie(url):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()


animation = load_lottie("https://assets4.lottiefiles.com/packages/lf20_mcvtkrvc.json")
animation4 = load_lottie("https://assets5.lottiefiles.com/packages/lf20_isbiybfh.json")
animation5 = load_lottie("https://assets7.lottiefiles.com/packages/lf20_8btahzqu.json")
service1 = load_lottie("https://assets1.lottiefiles.com/packages/lf20_3rqwsqnj.json")
service2 = load_lottie("https://assets1.lottiefiles.com/packages/lf20_iqbweiiz.json")
service3 = load_lottie("https://assets7.lottiefiles.com/packages/lf20_zdtukd5q.json")
service4 = load_lottie("https://assets6.lottiefiles.com/packages/lf20_gxcnsfk2.json")
service5 = load_lottie("https://assets5.lottiefiles.com/packages/lf20_x1ikbkcj.json")
service6 = load_lottie("https://assets5.lottiefiles.com/packages/lf20_xBgYq2.json")





# function for percentage-conversions
def percentage_maker(count, link_column):
    percentage = float(((count / len(link_column)) * 100))
    return percentage


def piechart(str):
    data = pd.read_excel(str)

    # extracting OS and Risk column's data as two separate list
    link_column = (data['ClickedTheLink'].tolist())
    credential_column = (data['UsedCredential'].tolist())

    # setting initial values zero for counting
    click_count, credential_count, ignore_count, link_credential_both = 0, 0, 0, 0

    # Determining operating systems with loop and if-else statements
    for i in range(len(link_column)):
        link_determiner = link_column[i]
        credential_determiner = credential_column[i]
        if link_determiner == "YES":
            click_count += 1
        if link_determiner == "IGNORED":
            ignore_count += 1
        if credential_determiner == "YES":
            credential_count += 1
        if link_determiner == "YES" and credential_determiner == "YES":
            link_credential_both += 1

    # Testing the program by printing and calculating total row number.
    # Note: Remove the docstring for testing.

    # Creating first chart
    plt.figure(0)
    topic = ['Clicked The Link', 'Ignored SMS', 'Entered Credential', 'Both']
    size = [percentage_maker(click_count, link_column), percentage_maker(ignore_count, link_column),
            percentage_maker(credential_count, link_column), percentage_maker(link_credential_both, link_column)]

    labels = list(topic)

    colors = ['gold', 'lightgreen', 'lightskyblue', 'lightcoral']
    plt.pie(size, explode=(0.05, 0.05, 0.05, 0.05), labels=labels, colors=colors, autopct='%1.1f%%', shadow=False,
            startangle=140)
    plt.axis('equal')
    plt.legend()
    plt.savefig('Chart.png')
    st.set_option('deprecation.showPyplotGlobalUse', False)
    st.pyplot(plt.show())


# ----------- Sidebar ----------- #
with st.sidebar:
    selected = option_menu(
        menu_title="Astia Dashboard",
        options=["Home", "Services", "Analytics Report", "Pricing", "Support"],
        icons=["house", "card-checklist", "pie-chart", "tags", "headset"],
        menu_icon=[""],
        default_index=0,
        styles={
            "nav-link": {
                "font-size": "20px",
                "--hover-color": "rgb(3, 171, 112)"
            },
            "nav-link-selected": {"background-color": "rgb(3, 171, 112)", "color": "white"}
        }
    )

# ------------- Home Page ------------------ #
if selected == "Home":
    string = "<h3 style = 'color:white; background-color:rgb(3, 171, 112); margin-top:-15px; font-style:italic;width: 100%;'>Astia<sub><i>Smishing Analysis Platform</i></sub></h3>"
    st.write(string, unsafe_allow_html=True)
    with st.container():
        left_column, right_column = st.columns(2)
        with left_column:
            st.write("###")
            st.write("###")
            st.subheader("This is where Cybersecurity meets Data Science")
            st.write("###")
            string = "Astia is a cybersecurity startup, specifically within user training awareness. The goal is to " \
                     "design a smishing platform that is capable of launching smishing campaigns and then measure " \
                     "analytics and metrics that has been generated by a campaign to make it easy to see patterns to " \
                     "mitigate real-world cyber attacks. While your employees are your greatest asset, they can also be your biggest threat regarding cyber security ðŸš¨Between phishing, social engineering attacks, malware distribution, password theft and breaches, there has never been a greater need for non-technical employees to maintain a cyber culture. "
            
            st.write(string, unsafe_allow_html=True)

        with right_column:
            st.write("###")
            st.write("###")
            st_lottie(animation, height=300, key="hacking")
    st.write("###")
    with st.container():
        st.subheader("Data Analytics & Visualization")
        st.write("###")
        string = "It's important to not only show that we are capable of launching campaigns but we want to also offer a" \
                 "myriad of data generated by a campaign to help security teams take a data-driven approach to locking down their company."
        st.write(string, unsafe_allow_html=True)

# ------------- Service Page ------------------ #
if selected == "Services":
    with st.container():
        string = "<h3 style = 'color:white; background-color:rgb(3, 171, 112); margin-top:-15px; font-style:italic;width: 100%;'>Astia<sub><i>Smishing Analysis Platform</i></sub></h3>"
        st.write(string, unsafe_allow_html=True)
        st.write("##")

        left_column, right_column = st.columns(2)
        with right_column:
            st_lottie(service3, height=300, key="service3")
            st.markdown('<h5 style="text-align:center;">Smishing Campaign<h5>', unsafe_allow_html=True)
        with left_column:
            app = MultiApp()
            app.add_app("Login", login.app)
            app.add_app("SignUp", signup.app)
            app.run()

# ------------- Analytical Page ------------------ #
if selected == "Analytics Report":
    string = "<h3 style = 'color:white; background-color:rgb(3, 171, 112); margin-top:-15px; font-style:italic;width: 100%;'>Astia<sub><i>Smishing Analysis Platform</i></sub></h3>"
    st.write(string, unsafe_allow_html=True)
    with st.container():
        st.write("##")
        uploaded_file = st.file_uploader("Choose a file to see the Analytical Data")
        left_column, right_column = st.columns(2)
        with left_column:
            if uploaded_file is not None:
                piechart(uploaded_file)

        with right_column:
            st.write("")

# ------------- Support Page ------------------ #
if selected == "Support":
    string = "<h3 style = 'color:white; background-color:rgb(3, 171, 112); margin-top:-15px; font-style:italic;width: 100%;'>Astia<sub><i>Smishing Analysis Platform</i></sub></h3>"
    st.write(string, unsafe_allow_html=True)
    st.write("##")
    st.write("##")
    with st.container():
        st.subheader("Need Help? Astia is one step away from you!")
        st.write("##")
        contact_form = """
        <form action="https://formsubmit.co/naveedanwar808@gmail.com" method="POST">
        <input type="hidden" value="false" name="_captcha">
     <input type="text" placeholder="Your name" name="name" required>
     <input type="email" placeholder="Your email" name="email" required>
     <textarea name="message" placeholder="Your message" required></textarea>
     <button type="submit">Send</button>
    </form>
        """
        left_column, right_column = st.columns(2)
        with left_column:
            st.markdown(contact_form, unsafe_allow_html=True)
        with right_column:
            st_lottie(animation4, height=300, key="service")

# ------------- Pricing Page ------------------ #
if selected == "Pricing":
    string = "<h3 style = 'color:white; background-color:rgb(3, 171, 112); margin-top:-15px; font-style:italic;width: 100%;'>Astia<sub><i>Smishing Analysis Platform</i></sub></h3>"
    st.write(string, unsafe_allow_html=True)
    with st.container():
        st.write("##")
        st.write("##")
        left_column, right_column = st.columns(2)
        with left_column:
            st_lottie(animation5, height=300, key="service")
        with right_column:
            st.write("")
